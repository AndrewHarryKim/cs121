The algorithm runs pretty slowly as a O(n) or linear time was not to found; instead a polynomial time one was found which ran at about n^2 *m. One algorithm that did show promise was the Manchester Algorithm which did in fact run in linear time. However one problem was a different one. One idea that was suggested to me was the usage of tries to store the data and find the correct combinations. This was also problematic as I could not find a way to check each combination in a quick way as I needed to at least check all combinations. Since this is polynomial time, the problem’s calculation time quickly grew to the point of being unable to solve a whole book’s worth of content making it not work on big data that a O(n) algorithm could solve. If there is one that is found before the demonstration b me, I will make sure to show both implementations during my demo. 